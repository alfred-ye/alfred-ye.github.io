<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.8.1">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2020-05-14T11:58:36+08:00</updated><id>http://localhost:4000/</id><title type="html">Hello Ye</title><subtitle>叶锦洲的个人博客</subtitle><author><name>true</name></author><entry><title type="html">不能懒啊</title><link href="http://localhost:4000/2020/05/14/dont-be-lazy.html" rel="alternate" type="text/html" title="不能懒啊" /><published>2020-05-14T00:00:00+08:00</published><updated>2020-05-14T00:00:00+08:00</updated><id>http://localhost:4000/2020/05/14/dont-be-lazy</id><content type="html" xml:base="http://localhost:4000/2020/05/14/dont-be-lazy.html">&lt;blockquote&gt;
  &lt;p&gt;不能懒啊，懒起来的话只要努力一点点就感觉自己在拼。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;KDK在课上讲他跟儿子说的话。&lt;/p&gt;</content><author><name>true</name></author><category term="生活" /><summary type="html">不能懒啊，懒起来的话只要努力一点点就感觉自己在拼。</summary></entry><entry><title type="html">大人，时代变了</title><link href="http://localhost:4000/2020/04/29/trend.html" rel="alternate" type="text/html" title="大人，时代变了" /><published>2020-04-29T00:00:00+08:00</published><updated>2020-04-29T00:00:00+08:00</updated><id>http://localhost:4000/2020/04/29/trend</id><content type="html" xml:base="http://localhost:4000/2020/04/29/trend.html">&lt;p&gt;以前一直以为用拼音缩写来代表词语只是00后的一种潮流。像网上冲浪、美眉一类的词一样，pyq（朋友圈）和yysy（有一说一）等只是年轻一代的人（不对，我也是年轻一代的人，或许说成走在时尚前沿的人？）因为有趣而弄出的玩法，等过段时间后再看就会觉得无聊罢了。&lt;/p&gt;

&lt;p&gt;作为九键拼音和二十六键五笔的人，我表示难以理解这个行为。毕竟从表现方式来看，使用pyq而不是797或者edlu来代表朋友圈的人应该是使用二十六键拼音的，这个情况下既然已经可以直接打出朋友圈三个字为啥还要特意切成英文再切回来，不明白。&lt;/p&gt;

&lt;p&gt;有一天我想到，男朋友和女朋友的简写都是npy，那么npy这个词代表着什么就需要看发送这个缩写的对象是谁，这无疑将沟通复杂化了。所以我想如果要更简单地表示的话应该用dx（对象）或者wdx（我对象）来替换npy这两个词。不过我又想到，如果我发了dx来表示我对象（虽然我没有对象），很大概率对方可能会问我为什么我突然要对x进行求导，这样一来我就需要解释一下什么是dx，为什么我觉得用dx而不是npy来表达那个不存在的人会更简单一点，最终导致的结果是事情变得复杂。于是，我就没有在别人面前谈过dx这个词了。&lt;/p&gt;

&lt;p&gt;似乎，使用拼音缩写本身就不是为了让沟通变得更简单。&lt;/p&gt;

&lt;p&gt;不过无论我明不明白，确实有人在这么打。不论我自己用不用，我仍然需要学习这种说法。以前我因为这个念头而感到苦恼，怎么大家都喜欢讲行话，怎么聊个天都要这么累。但是前两天我看了一下一个半月以前检察日报关于某火出圈的艺人事件的报道的时候，我才了有几分明白。&lt;/p&gt;

&lt;p&gt;以下是检察日报3.11法治评论板块，题目为《肖战事件：是非曲直如何评说》文章的部分内容&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;搜索“227”事件，你可能会发现一个奇怪的现象。网友们的发言夹杂着很多字母，通篇读下来仿佛加了密。比如肖战的名字要写成“xz”，其粉丝名称“小飞侠”要写成“sfx”，甚至“对不起”“真情实感”“虽然但是”等普通的词汇也要写成拼音字母缩写，仿佛是什么神秘的仪式。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;　　这种交流方式，可以说正是饭圈文化四处“出警”造成的结果之一。一些明星的粉丝们会时时刻刻在微博等公共平台上搜索自己偶像的名字，如果有人敢对他/她发表任何不欣赏、不喜欢的看法，他们就会蜂拥而至，对博主口诛笔伐，甚至人肉真实信息逼博主道歉删博。久而久之，大家在提到明星的时候，就学会了用绰号、谐音字、拼音首写字母来代替，像极了《哈利波特》中不能提名字的大反派伏地魔。因为伏地魔在原作中被称为“you　know　who（神秘人）”，所以有的明星因其粉丝太过嚣张而被网友缩写成了ykw。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;　　有网友表示，自己小心翼翼地不点名批评了某明星的演技，却被粉丝评论私信一顿骂，他问对方怎么发现自己这条微博的，对方回复：巡逻。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;是了，虽然还是不能理解pyq和yysy/u1s1的成因，但至少懂了使用和人名缩写的原因。这挺好，了解之后就不容易再烦恼，时尚前沿的神秘仪式，岂是我等能理解深刻的。&lt;/p&gt;</content><author><name>true</name></author><category term="生活" /><summary type="html">以前一直以为用拼音缩写来代表词语只是00后的一种潮流。像网上冲浪、美眉一类的词一样，pyq（朋友圈）和yysy（有一说一）等只是年轻一代的人（不对，我也是年轻一代的人，或许说成走在时尚前沿的人？）因为有趣而弄出的玩法，等过段时间后再看就会觉得无聊罢了。</summary></entry><entry><title type="html">学习JavaScript的第五天</title><link href="http://localhost:4000/2020/04/19/lean-JS-day-five.html" rel="alternate" type="text/html" title="学习JavaScript的第五天" /><published>2020-04-19T00:00:00+08:00</published><updated>2020-04-19T00:00:00+08:00</updated><id>http://localhost:4000/2020/04/19/lean-JS-day-five</id><content type="html" xml:base="http://localhost:4000/2020/04/19/lean-JS-day-five.html">&lt;blockquote&gt;
  &lt;p&gt;当三分的热度过去，我还剩下什么呢？&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;实不相瞒，我十分烫。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;第一天从CSS转场的疲惫被Pages的成就而冲淡，之后的几天倒是真的全心冲在JavaScript上。确实作为一门编程语言JavaScript的学习过程没有HTML的造物或CSS的美术来得视觉冲击强，但是其实也没有那么枯燥。&lt;/p&gt;

&lt;p&gt;毕竟万物皆对象！&lt;/p&gt;

&lt;p&gt;一个编辑器，一个Chrome，甚至不需要专门写html文件。教程网页按个F12，一顿噼里啪啦然后来个&lt;code class=&quot;highlighter-rouge&quot;&gt;ReferenceError!&lt;/code&gt;或者&lt;code class=&quot;highlighter-rouge&quot;&gt;SyntaxError!&lt;/code&gt;的感觉就是很不错，谁说JavaScript是个没有颜色的头发杀手的，这不是有红色么。&lt;/p&gt;

&lt;p&gt;算起来现在已经是学习的第五天了，总得来说生活还是很充实，我很享受。虽然教程上应用的例子不多，真正使用很可能会狂出问题，但是这个不是问题，我喜欢红色（决定了这个页面的背景颜色就用&lt;code class=&quot;highlighter-rouge&quot;&gt;#ff000&lt;/code&gt;了）！&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;诶，我怎么眼泪掉下来了，奇怪。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;争取月末的时候把JavaScript基础内容过一遍然后再尽可能了解关于&lt;code class=&quot;highlighter-rouge&quot;&gt;Node.js&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;AJAX&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;Canvas&lt;/code&gt;的知识。加油吧。&lt;/p&gt;</content><author><name>true</name></author><category term="生活" /><summary type="html">当三分的热度过去，我还剩下什么呢？</summary></entry><entry><title type="html">uni-app 封装网络请求uni.request()并实现同步</title><link href="http://localhost:4000/2020/04/18/uni-app-request.html" rel="alternate" type="text/html" title="uni-app 封装网络请求uni.request()并实现同步" /><published>2020-04-18T00:00:00+08:00</published><updated>2020-04-18T00:00:00+08:00</updated><id>http://localhost:4000/2020/04/18/uni-app-request</id><content type="html" xml:base="http://localhost:4000/2020/04/18/uni-app-request.html">&lt;p&gt;uni-app自带的API&lt;code class=&quot;highlighter-rouge&quot;&gt;uni.request()&lt;/code&gt;可以获取接口的数据，但是直接使用无法完成数据在页面渲染的目的。查阅资料发现是因为网络请求是&lt;strong&gt;异步操作&lt;/strong&gt;（因为网络操作的响应时间是不定的，无法直接按照我们的代码序列顺序执行）。&lt;/p&gt;

&lt;p&gt;要想达成在页面渲染前获取数据的目的，需要进行&lt;strong&gt;同步化操作&lt;/strong&gt;（把异步操作变成同步）。此外为了能在各个页面都方便地使用这个请求，还需要进行一个&lt;strong&gt;封装并挂载到全局&lt;/strong&gt;的操作&lt;/p&gt;
&lt;h2 id=&quot;需要的步骤&quot;&gt;需要的步骤&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;新建js文件进行操作的封装，并在main.js中挂载全局&lt;/li&gt;
  &lt;li&gt;通过async&amp;amp; await进行同步化操作&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;js文件配置&quot;&gt;JS文件配置&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;建立.js文件，路径：&lt;code class=&quot;highlighter-rouge&quot;&gt;/components/my-request/api.js&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;主体分析
    &lt;ul&gt;
      &lt;li&gt;因为要用async&amp;amp; await 进行同步化操作，而&lt;code class=&quot;highlighter-rouge&quot;&gt;await&lt;/code&gt;后面只能跟&lt;code class=&quot;highlighter-rouge&quot;&gt;Promise&lt;/code&gt;数据类型，所以要返回一个&lt;code class=&quot;highlighter-rouge&quot;&gt;Promise&lt;/code&gt;数据&lt;/li&gt;
      &lt;li&gt;因为不同的接口地址不同，传给接口的数据也有所不同，所以统一用一个变量&lt;code class=&quot;highlighter-rouge&quot;&gt;options&lt;/code&gt;来表示（如&lt;code class=&quot;highlighter-rouge&quot;&gt;option.url&lt;/code&gt;表示接口url）&lt;/li&gt;
      &lt;li&gt;主体代码如下，视情况还可以再加上显示加载框的方法，目前展示的应该是最简单的封装（fail函数其实也可以删除）&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;myRequest&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 这是一个箭头函数，options是传入的参数&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Promise&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;resolve&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;reject&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 返回一个Promise对象&lt;/span&gt;
	  &lt;span class=&quot;c1&quot;&gt;// 封装主体：网络请求API&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;uni&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{},&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;method&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;method&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'GET'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;// 默认值GET，如果有需要改动，在options中设定其他的method值&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;success&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      	&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;		&lt;span class=&quot;c1&quot;&gt;// 控制台显示数据信息&lt;/span&gt;
      	&lt;span class=&quot;nx&quot;&gt;resolve&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;fail&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      	&lt;span class=&quot;c1&quot;&gt;// 页面中弹框显示失败&lt;/span&gt;
      	&lt;span class=&quot;nx&quot;&gt;uni&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;showToast&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'请求接口失败'&lt;/span&gt;
      	&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
      	&lt;span class=&quot;c1&quot;&gt;// 返回错误消息&lt;/span&gt;
      	&lt;span class=&quot;nx&quot;&gt;reject&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;mainjs配置&quot;&gt;main.js配置&lt;/h3&gt;

&lt;p&gt;添加代码&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// 接收api.js下的myRequst方法&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;myRequest&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'./components/my-request/api.js'&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 挂载到全局，让所有的页面都能调用myRequest方法&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;Vue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;prototype&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$myRequest&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;myRequest&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;在页面中使用封装好的方法&quot;&gt;在页面中使用封装好的方法&lt;/h3&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;backendData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:[]&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;onLoad&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;initPage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;methods&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;initPage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;res&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$myRequest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'接口地址'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;// 接口的请求参数，可以为空&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// 给页面的数据赋值&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;backendData&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// ...&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;代码分析：&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;在&lt;code class=&quot;highlighter-rouge&quot;&gt;method&lt;/code&gt;中新建一个方法，取名为&lt;code class=&quot;highlighter-rouge&quot;&gt;intitPage&lt;/code&gt;，实现以下两个功能
    &lt;ul&gt;
      &lt;li&gt;从接口获取数据&lt;code class=&quot;highlighter-rouge&quot;&gt;res&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;用&lt;code class=&quot;highlighter-rouge&quot;&gt;res&lt;/code&gt;初始化页面数据&lt;code class=&quot;highlighter-rouge&quot;&gt;backendData&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;async&amp;amp; await的使用
    &lt;ul&gt;
      &lt;li&gt;语法
        &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;函数名&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
&lt;span class=&quot;kr&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;需要同步的方法（必须是&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;Promise&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;类型）&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;功能：实现同步，&lt;code class=&quot;highlighter-rouge&quot;&gt;await&lt;/code&gt;后的方法return了才执行下一条语句&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;数据获取应该在页面渲染之前，所以我们在&lt;code class=&quot;highlighter-rouge&quot;&gt;onLoad()&lt;/code&gt;函数（页面加载时执行的函数）中执行&lt;code class=&quot;highlighter-rouge&quot;&gt;intitPage&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;res&lt;/code&gt;的属性有很多，通过查看&lt;code class=&quot;highlighter-rouge&quot;&gt;res&lt;/code&gt;，发现我们需要的值在&lt;code class=&quot;highlighter-rouge&quot;&gt;res.data&lt;/code&gt;中，所以给&lt;code class=&quot;highlighter-rouge&quot;&gt;backendData&lt;/code&gt;赋的值是&lt;code class=&quot;highlighter-rouge&quot;&gt;res.data&lt;/code&gt;（注：有时需要的数据在&lt;code class=&quot;highlighter-rouge&quot;&gt;res.data.data&lt;/code&gt;中，这里到底用几个data可以通过控制台查看&lt;code class=&quot;highlighter-rouge&quot;&gt;res&lt;/code&gt;的值来判断）&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;其他的点&quot;&gt;其他的点&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;uni.request()&lt;/code&gt;的返回值是&lt;code class=&quot;highlighter-rouge&quot;&gt;res&lt;/code&gt;，封装好后可以直接设一个变量&lt;code class=&quot;highlighter-rouge&quot;&gt;res = request（封装后）&lt;/code&gt;来获得数据&lt;/li&gt;
  &lt;li&gt;可以把要给接口的数据做成一个变量，方便修改
    &lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;data2backEnd&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
 &lt;span class=&quot;nl&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
 &lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

 &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
 &lt;span class=&quot;nx&quot;&gt;method&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'POST'&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
     &lt;span class=&quot;k&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;initPage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
     &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;res&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$myRequest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data2backEnd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
   &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ol&gt;</content><author><name>true</name></author><category term="技术" /><category term="uni-app" /><summary type="html">uni-app自带的APIuni.request()可以获取接口的数据，但是直接使用无法完成数据在页面渲染的目的。查阅资料发现是因为网络请求是异步操作（因为网络操作的响应时间是不定的，无法直接按照我们的代码序列顺序执行）。</summary></entry><entry><title type="html">我觉得吧，人要对自己负责</title><link href="http://localhost:4000/2020/04/17/a-talking.html" rel="alternate" type="text/html" title="我觉得吧，人要对自己负责" /><published>2020-04-17T00:00:00+08:00</published><updated>2020-04-17T00:00:00+08:00</updated><id>http://localhost:4000/2020/04/17/a-talking</id><content type="html" xml:base="http://localhost:4000/2020/04/17/a-talking.html">&lt;p&gt;有人说短板效应是不正确的，因为只要有一个板足够长的话，把桶倾斜过来也可以装很多的水。那个人还说我们因此可以换位思考，去充分发展自己的长处。&lt;/p&gt;

&lt;p&gt;可惜那个人只是以个人的长短处举例，“长板效应”的应用能有多广呢？如果一个小组的人围成一个桶的话，大腿真的好Carry全队吗？当桶越来越斜，也会越来越容易倒吧？当桶倒的时候，也应该是那条最长的板最先倒地，摔得最惨吧？&lt;/p&gt;

&lt;p&gt;想着那可能存在的可怜长板，想着那已成事实的小组状态，我这样想到。&lt;/p&gt;

&lt;p&gt;我喜欢人的多样，我喜欢人的沉默。但是当所有人都沉默，那种气氛让我很不自在。挺无奈的，倒不是有人有问题，不过我这个需要报酬的工作者在自我感觉付出良多却没有任何响应时有些许失落。&lt;/p&gt;

&lt;p&gt;哪里需要改变，虽然感觉哪里都要改变，但想想最先要的应该是我的心态。再不调整一下就要在沉默中灭亡了。&lt;/p&gt;

&lt;p&gt;很幸运，尝试再一次软弱地退出时有人拉了我一把。一次可说大可说小的谈话，昭老师和雯同学虽然一个讲话停不下来，一个半天敲不出一个字，但是都能从话语间感到满满的能量，真好。&lt;/p&gt;

&lt;p&gt;虽然最后不打算真的就冷漠一些，但期望会放地再低些。虽然也不是没有可能因为失去期望而失去激情，但管他呢，至少我现在不后悔之前做过的事情。&lt;/p&gt;

&lt;p&gt;我觉得吧，生别人的气只会伤自己的心，抱别人的怨只会纠自己的结，这亏大了。我叶小洲什么时候这么会欺负自己了？这不对劲了啊。&lt;/p&gt;</content><author><name>true</name></author><category term="生活" /><summary type="html">有人说短板效应是不正确的，因为只要有一个板足够长的话，把桶倾斜过来也可以装很多的水。那个人还说我们因此可以换位思考，去充分发展自己的长处。</summary></entry><entry><title type="html">页面的MD渲染测试</title><link href="http://localhost:4000/2020/04/15/test-md-rendering.html" rel="alternate" type="text/html" title="页面的MD渲染测试" /><published>2020-04-15T00:00:00+08:00</published><updated>2020-04-15T00:00:00+08:00</updated><id>http://localhost:4000/2020/04/15/test-md-rendering</id><content type="html" xml:base="http://localhost:4000/2020/04/15/test-md-rendering.html">&lt;p&gt;这个的markdown似乎不会理会换行，是我LF的原因吗？&lt;/p&gt;

&lt;h1 id=&quot;这是一级标题&quot;&gt;这是一级标题&lt;/h1&gt;
&lt;h2 id=&quot;这是二级标题&quot;&gt;这是二级标题&lt;/h2&gt;
&lt;h3 id=&quot;这是三级标题&quot;&gt;这是三级标题&lt;/h3&gt;
&lt;p&gt;对比用正常文本&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;这是加粗的文字&lt;/strong&gt;
&lt;em&gt;这是倾斜的文字&lt;/em&gt;
&lt;strong&gt;&lt;em&gt;这是斜体加粗的文字&lt;/em&gt;&lt;/strong&gt;
&lt;del&gt;这是加删除线的文字&lt;/del&gt;
对比用正常文本&lt;/p&gt;

&lt;hr /&gt;

&lt;blockquote&gt;
  &lt;p&gt;这是引用的内容&lt;/p&gt;
  &lt;blockquote&gt;
    &lt;p&gt;二级引用的内容&lt;/p&gt;
  &lt;/blockquote&gt;
&lt;/blockquote&gt;

&lt;p&gt;对比用正常文本&lt;/p&gt;

&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;列表内容
    &lt;ul&gt;
      &lt;li&gt;二级列表&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;列表内容&lt;/li&gt;
  &lt;li&gt;列表内容&lt;/li&gt;
&lt;/ul&gt;

&lt;ol&gt;
  &lt;li&gt;列表内容&lt;/li&gt;
  &lt;li&gt;列表内容&lt;/li&gt;
  &lt;li&gt;列表内容&lt;/li&gt;
&lt;/ol&gt;

&lt;hr /&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;表头&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;表头&lt;/th&gt;
      &lt;th style=&quot;text-align: right&quot;&gt;表头&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;内容&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;内容&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;内容&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;内容&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;内容&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;内容&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;hr /&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;高亮测试&lt;/code&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;test highlight&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;test code block



&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>true</name></author><category term="测试" /><summary type="html">这个的markdown似乎不会理会换行，是我LF的原因吗？</summary></entry><entry><title type="html">基本的操作</title><link href="http://localhost:4000/2020/04/15/options.html" rel="alternate" type="text/html" title="基本的操作" /><published>2020-04-15T00:00:00+08:00</published><updated>2020-04-15T00:00:00+08:00</updated><id>http://localhost:4000/2020/04/15/options</id><content type="html" xml:base="http://localhost:4000/2020/04/15/options.html">&lt;p&gt;在顶部的banner部分已经显示了title，这里就是正文了。&lt;/p&gt;

&lt;h3 id=&quot;jekyllhardcandy-jekyll-特性的一点说明&quot;&gt;Jekyll(HardCandy-Jekyll) 特性的一点说明&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;md文件直接写在&lt;code class=&quot;highlighter-rouge&quot;&gt;_post&lt;/code&gt;文件夹中，命名方式为&lt;code class=&quot;highlighter-rouge&quot;&gt;YYYY-MM-DD-name-of-the-post.md&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;md文件不可以命名为中文，否则页面会404（title的设置可以是中文）&lt;/li&gt;
  &lt;li&gt;cover会自动缩放裁剪图片&lt;/li&gt;
  &lt;li&gt;如果写了cover但是不放图会留白&lt;/li&gt;
  &lt;li&gt;可以通过&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt;标签播放视频（我没试过）&lt;/li&gt;
  &lt;li&gt;Jekyll能很好地支持代码片段，具体使用如下（发现用源码无论有没有加反引号要么报错要么直接渲染，只好写中文百分号了）
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;{百分号 highlight 所用的语言 %}
  // 代码块
{百分号 endhighlight %}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;使用效果：ruby&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Hi, &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Tom'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#=&amp;gt; prints 'Hi, Tom' to STDOUT.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;对比用代码块&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;def print_hi(name)
  puts &quot;Hi, #{name}&quot;
end
print_hi('Tom')
#=&amp;gt; prints 'Hi, Tom' to STDOUT.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;使用效果：html&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;class&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;id&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;对比用代码块&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;div&amp;gt;
  &amp;lt;div class=&quot;class&quot; id=&quot;id&quot;&amp;gt;
  &amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>true</name></author><category term="测试" /><summary type="html">在顶部的banner部分已经显示了title，这里就是正文了。</summary></entry><entry><title type="html">使用Pages的第一天</title><link href="http://localhost:4000/2020/04/15/day-one-diary.html" rel="alternate" type="text/html" title="使用Pages的第一天" /><published>2020-04-15T00:00:00+08:00</published><updated>2020-04-15T00:00:00+08:00</updated><id>http://localhost:4000/2020/04/15/day-one-diary</id><content type="html" xml:base="http://localhost:4000/2020/04/15/day-one-diary.html">&lt;p&gt;上周学完HTML和CSS，转场Javascript时发现突然有一丝疲惫。人还是那样的人，眼睛还是那样的眼睛，手还是那样的手，但是确实出现了一丝内容看不下去，笔记懒得写的状态，于是便打算休息一下。&lt;/p&gt;

&lt;p&gt;休息的内容是写人间烟火的CSS库。虽然之前是有用到uni-app官方提供的colorUI，但是还是会有特殊的需要自定义的样式。因为是第一次接触前端，没能理解结构样式分离的思想，出现了大量的行内样式和不知其然的类的引用，现在看看代码就觉得真是的丑。以此为契机，想通过写CSS库的办法休息的同时还可以回顾一下之前所学。&lt;/p&gt;

&lt;p&gt;确实是有整合个了一个页面的样式，但之后又感觉到写CSS库这个休息的办法还是有点麻烦就又神游去写自己（未发布的）网页了。体会美工辛苦的同时给我接触到了Pages，当时就感觉发现了新大陆。虽然买域名加云服务器也不贵，但是是真的有感觉到Pages的友好。花了一天的搭了一个博客，今天就开始正式使用了。虽然不知道会坚持多久，但是记录本身就是一种成长，何必去纠结成果？&lt;/p&gt;

&lt;p&gt;我把这篇文章加上“里程碑”的标签，一是为了纪念前端学习阶段0.1的结束，二是为了养成记录这一习惯的瞬间（虽然现在也不能说是习惯，虽然以前好像有过零零散散的记录……好吧，我只是想让这一天变得更加特别，原谅我的贪心）。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;今天的底色选择了IMPERIAL PRIMER（帝国底漆，#222f3e），就从这里开始吧。&lt;/p&gt;
&lt;/blockquote&gt;</content><author><name>true</name></author><category term="生活" /><category term="里程碑" /><category term="技术" /><summary type="html">上周学完HTML和CSS，转场Javascript时发现突然有一丝疲惫。人还是那样的人，眼睛还是那样的眼睛，手还是那样的手，但是确实出现了一丝内容看不下去，笔记懒得写的状态，于是便打算休息一下。</summary></entry></feed>